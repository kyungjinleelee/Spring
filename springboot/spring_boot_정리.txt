[Spring Boot]
1. 환경설정
- JDK 1.8
- springboot 2.4.2 버전 
- STS 3.9.14 버전 
- 톰캣은 필요 없음 (Spring boot에 이미 내장되어 있기 때문)

* 설치방법
- c 밑에 boot_study 폴더 생성 
- spring_study에서 썼던 sts 복사해서 붙여넣기
- 압축 풀고 C:\boot_study\sts-bundle\sts-3.9.14.RELEASE 경로에 workspace 폴더 생성
- sts.exe 실행 후 workspace 폴더로 경로 결정 해주기
- 실행 후 window -> preference -> general -> workspace 가서 utf-8, web -> css, html, jsp를 utf-8로  바꿔주기 
- preference -> 서버 -> runtime environment 가서 있는 서버 remove -> 실행 창 있는 서버까지 삭제해주기 (package explorer)

2. boot 프로젝트 생성
 가. 웹 사이트 이용 (initializer 방법) (일반적이지는 않음) 
 http://start.spring.io
  - project에선 maven 선택, 랭귀지에는 java, springboot에선 2.7.15 (최저버전), java는 8버전 선택, dependency(의존
  - dependency는 나중에 설정 (add dependencies)
 - packaging은 jar과 war가 있는데, 
	무조건 jar로 배포할 수도 있고 더 명확하게 하려면 구분해서 배포할 수도 있음
	(톰캣을 내장하기 때문에 상관 없음)
 - generate 클릭 -> 만들어서 다운로드까지 해줌 
 - 다운로드 받은 파일을 boot_study의 workspace 밑에 압축 해제 
 - import -> maven -> existing maven project로 가서 압축 푼 demo 선택하고 finish (처음에는 임포트할 때 시간이 좀 걸림)

 나. sts에서 로컬 이용
 - file > new > spring starter project > 타입 알맞게 설정 > next > boot version 설정 > next > finish
 - 생성 후 pom.xml 가서 원하는 버전으로 바꾸기 (필요 시) (5.번에 가.참고)

3. 배포 방법 비교
 가. spring framework
   	비웹(웹이 아닌)어플리케이션 개발 (main 포함) 배포 : jar 형식으로 배포
	웹 어플리케이션 개발 : war 형식으로 배포
 나. spring boot 
	비웹(웹이 아닌)어플리케이션 개발 (main 포함) 배포 : jar 형식으로 배포
	웹 어플리케이션 개발 : jar 및 war 형식으로 배포

4. 의존성 (dependency)
 가. spring framework : 필요한 의존성은 개별적으로 추가했음
나. spring boot : 필요한 의존성들을 묶어서 하나의 dependency로 제공함 = starter 개념 (ex. xxx-starter, mybatis-starter)

5. 구조 
 가. pom.xml (원하는 boot 버전으로 변경)
<parent>
<groupId>org.springframework.boot</groupId>
<artifactId>spring-boot-starter-parent</artifactId>
<version>2.4.2</version>
<relativePath/> <!-- lookup parent from repository -->
</parent>

나. src/main/java
- main 메서드 포함 (무조건 있어야 함)
 ====> boot에서는 @SpringBootApplication 지정된 어플리케이션 파일은 반드시 존재해야함 (웹개발 비웹개발 모두 application이 실행됨)
 ====> 배포 시 web일지라도 jar로 배포 가능
	* @SpringBootApplication의 3가지 기능
	 @SpringBootConfiguration : 추가적인 Configuration 설정이 가능 
	 @EnableAutoConfiguration : starter 이용해서 거의 자동으로 필요한 설정을 자동화
	 @ComponentScan : 자동으로 빈 생성 (스프링 프레임워크에서 xml에 <context:component-scan basepackes="com/*" 한 것과 동일 

다. boot에서는 스프링 프레임워크에서 사용했던 xml 지원 x 
 -> 대신 src/main/resource의 application.properties 파일에서 설정 (또는 application.yml(야물)파일 사용 가능)

라. boot 프로젝트 실행 
 어플리케이션 우클릭 > run as > 3 spring boot app 클릭 
혹은 좌측 하단 local > 프로젝트 선택 > restart 클릭 

##############################################################
